{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "PMP",
      "Effect": "Deny",
      "Action": [
        "aws-marketplace:CreatePrivate*",
        "aws-marketplace:AssociateProductsWithPrivate*",
        "aws-marketplace:CreatePrivate*",
        "aws-marketplace:DescribePrivate*",
        "aws-marketplace:DisassociateProducts*",
        "aws-marketplace:ListPrivate*",
        "aws-marketplace:StartPrivate*",
        "aws-marketplace:StopPrivate*",
        "aws-marketplace:UpdatePrivate*"
      ],
      "Resource": "*",
      "Condition": {}
    },
    {
      "Sid": "ROOT",
      "Effect": "Deny",
      "NotAction": [
        "iam:CreateVirtualMFADevice",
        "iam:EnableMFADevice",
        "iam:GetUser",
        "iam:ListMFADevices",
        "iam:ListVirtualMFADevices",
        "iam:ResyncMFADevice",
        "aws-portal:*",
        "sts:GetSessionToken",
        "iam:DeleteVirtualMFADevice",
        "trustedadvisor:*",
        "support:*"
      ],
      "Resource": "*",
      "Condition": {
        "ArnLike": {
          "aws:PrincipalARN": ["arn:aws:iam::*:root"]
        }
      }
    },
    {
      "Sid": "EBS1",
      "Effect": "Deny",
      "Action": "ec2:RunInstances",
      "Resource": "arn:aws:ec2:*:*:volume/*",
      "Condition": {
        "Bool": {
          "ec2:Encrypted": "false"
        }
      }
    },
    {
      "Sid": "EBS2",
      "Effect": "Deny",
      "Action": "ec2:CreateVolume",
      "Resource": "*",
      "Condition": {
        "Bool": {
          "ec2:Encrypted": "false"
        }
      }
    },
    {
      "Sid": "EFS",
      "Effect": "Deny",
      "Action": "elasticfilesystem:CreateFileSystem",
      "Resource": "*",
      "Condition": {
        "Bool": {
          "elasticfilesystem:Encrypted": "false"
        }
      }
    },
    {
      "Sid": "RDS",
      "Effect": "Deny",
      "Action": "rds:CreateDBInstance",
      "Resource": "arn:aws:rds:*:*:db:*",
      "Condition": {
        "StringNotLike": {
          "rds:DatabaseEngine": ["aurora*", "docdb*", "neptune"]
        },
        "Bool": {
          "rds:StorageEncrypted": "false"
        }
      }
    },
    {
      "Sid": "AUR",
      "Effect": "Deny",
      "Action": "rds:CreateDBCluster",
      "Resource": "*",
      "Condition": {
        "StringLike": {
          "rds:DatabaseEngine": ["aurora*", "docdb*", "neptune"]
        },
        "Bool": {
          "rds:StorageEncrypted": "false"
        }
      }
    },
    {
      "Sid": "OTHS",
      "Effect": "Deny",
      "Action": [
        "organizations:LeaveOrg*",
        "aws-portal:Modify*",
        "aws-portal:ViewAccount",
        "aws-portal:ViewPaymentMethods",
        "ds:AcceptSharedDir*",
        "ds:ShareDir*",
        "ds:EnableSso",
        "ds:DisableSso",
        "ram:AcceptResourceShareInv*",
        "ram:AssociateResourceShare",
        "ram:CreateResourceShare",
        "ram:EnableSharingWithAwsOrg*",
        "lightsail:*",
        "sumerian:*",
        "gamelift:*",
        "appflow:*",
        "iq:*"
      ],
      "Resource": "*",
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalARN": ["arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*", "arn:aws:iam::*:role/${ORG_ADMIN_ROLE}"]
        }
      }
    },
    {
      "Sid": "NET2",
      "Effect": "Deny",
      "Action": [
        "ec2:AcceptVpc*",
        "ec2:AcceptTransitGateway*",
        "ec2:AssociateClientVpn*",
        "ec2:AuthorizeClientVpn*",
        "ec2:AttachEgressOnlyInternetGateway",
        "ec2:AttachInternetGateway",
        "ec2:AttachVpnGateway",
        "ec2:CreateCarrierGateway",
        "ec2:CreateClientVpn*",
        "ec2:CreateCustomerGateway",
        "ec2:CreateEgressOnlyInternetGateway",
        "ec2:CreateInternetGateway",
        "ec2:CreateNatGateway",
        "ec2:CreateTransitGateway*",
        "ec2:CreateVpc",
        "ec2:CreateVpcEndpoint",
        "ec2:CreateVpcPeeringConnection",
        "ec2:CreateVpn*",
        "ec2:DeleteClientVpn*",
        "ec2:DeleteNetworkAcl*",
        "ec2:AllocateAddress",
        "ec2:AssociateAddress",
        "ec2:ModifyClientVpn*",
        "ec2:ModifyImageAttribute",
        "ec2:ModifySnapshotAttribute",
        "ec2:ModifyVpn*",
        "ec2:RevokeClientVpn*",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBClusterSnapshotAttribute",
        "elasticmapreduce:PutBlockPublic*",
        "globalaccelerator:Create*",
        "globalaccelerator:Update*",
        "kms:ScheduleKeyDeletion",
        "kms:Delete*",
        "iam:CreateGroup",
        "iam:CreateUser",
        "iam:CreateAccessKey",
        "iam:DeleteUser",
        "iam:UpdateUser",
        "iam:DeleteGroup",
        "iam:UpdateGroup",
        "iam:DeleteRolePermissionsBoundary",
        "iam:AddUserToGroup",
        "iam:TagUser",
        "networkmanager:Create*",
        "networkmanager:Update*",
        "networkmanager:Associate*",
        "networkmanager:Disassociate*",
        "networkmanager:Register*",
        "networkmanager:Deregister*"
      ],
      "Resource": "*",
      "Condition": {
        "ArnNotLike": {
          "aws:PrincipalArn": [
            "arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*",
            "arn:aws:iam::*:role/${ACCELERATOR_NAME}Ops-*"
          ]
        }
      }
    },
    {
      "Sid": "GBL2",
      "Effect": "Deny",
      "Action": ["acm:*", "kms:*", "sns:Publish"],
      "Resource": "*",
      "Condition": {
        "StringNotEquals": {
          "aws:RequestedRegion": "${ADDL_REGIONS_B}"
        },
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*",
            "arn:aws:iam::*:role/${ORG_ADMIN_ROLE}",
            "arn:aws:iam::*:role/AWSServiceRoleFor*"
          ]
        }
      }
    },
    {
      "Sid": "GBL1",
      "Effect": "Deny",
      "NotAction": [
        "a4b:*",
        "acm:*",
        "access-analyzer:*",
        "aws-marketplace-management:*",
        "aws-marketplace:*",
        "aws-portal:*",
        "budgets:*",
        "ce:*",
        "chime:*",
        "cloudfront:*",
        "config:*",
        "cur:*",
        "directconnect:*",
        "ec2:DescribeRegions",
        "ec2:DescribeTransitGateways",
        "ec2:DescribeVpnGateways",
        "fms:*",
        "globalaccelerator:*",
        "health:*",
        "iam:*",
        "kms:*",
        "networkmanager:*",
        "organizations:*",
        "pricing:*",
        "route53:*",
        "route53domains:*",
        "s3:GetAccountPublic*",
        "s3:GetBucketLocation",
        "s3:ListAllMyBuckets",
        "shield:*",
        "sts:*",
        "support:*",
        "trustedadvisor:*",
        "waf-regional:*",
        "waf:*",
        "wafv2:*",
        "route53-recovery-readiness:*",
        "route53-recovery-control-config:*",
        "s3:GetStorageLens*",
        "s3:ListStorageLens*",
        "s3:CreateMultiR*",
        "s3:DeleteMultiR*",
        "s3:DescribeMultiR*",
        "s3:GetMultiR*",
        "s3:ListMultiR*",
        "s3:PutMultiR*",
        "sns:Publish",
        "tag:GetResources"
      ],
      "Resource": "*",
      "Condition": {
        "StringNotEquals": {
          "aws:RequestedRegion": "${ADDL_REGIONS_A}"
        },
        "ArnNotLike": {
          "aws:PrincipalARN": [
            "arn:aws:iam::*:role/${ACCELERATOR_PREFIX}*",
            "arn:aws:iam::*:role/${ORG_ADMIN_ROLE}",
            "arn:aws:iam::*:role/AWSServiceRoleFor*"
          ]
        }
      }
    }
  ]
}
